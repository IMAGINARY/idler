{"version":3,"file":"idler.umd.js","sources":["../node_modules/events/events.js","../node_modules/universal-perf-hooks/dist/browser.js","../src/idle-timeout.ts","../src/idle-interval.ts","../src/idle-animation.ts","../src/idler.ts","../src/interrupters/base.ts","../src/util.ts","../src/interrupters/event.ts","../src/interrupters/keyboard.ts","../src/interrupters/pointer.ts"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PerformanceObserver = exports.performance = void 0;\nexports.performance = window.performance, exports.PerformanceObserver = window.PerformanceObserver;\n","import { Callback } from './util';\n\nconst dummyTimeoutId = setTimeout(() => {}, 0);\n\ninterface Idler {\n  interrupt(): void;\n\n  getIdleTime(): number;\n\n  on(eventType: string, callback: Callback): this;\n\n  off(eventType: string, callback: Callback): this;\n\n  once(eventType: string, callback: Callback): this;\n}\n\nexport default class IdleTimeout {\n  protected idler: Idler;\n\n  protected beginCb: Callback;\n\n  protected endCb: Callback;\n\n  protected delay: number;\n\n  protected duration: number;\n\n  protected timeoutId: ReturnType<typeof setTimeout>;\n\n  protected durationTimeoutId: ReturnType<typeof setTimeout>;\n\n  protected endHandler = this.handleEnd.bind(this);\n\n  private initialized = false;\n\n  private idle = false;\n\n  constructor(\n    idler: Idler,\n    beginCb: Callback,\n    delay: number,\n    duration: number,\n    endCb: Callback\n  ) {\n    this.idler = idler;\n    this.beginCb = beginCb;\n    this.delay = delay;\n    this.duration = duration;\n    this.endCb = typeof endCb === 'undefined' ? () => {} : endCb;\n    this.timeoutId = dummyTimeoutId;\n    this.durationTimeoutId = dummyTimeoutId;\n    this.init();\n  }\n\n  init(): void {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.idle = false;\n      this.timeoutId = setTimeout(() => this.testTimeout(), 0);\n    }\n  }\n\n  isInitialized(): boolean {\n    return this.initialized;\n  }\n\n  clear(): void {\n    if (this.initialized) {\n      clearTimeout(this.timeoutId);\n      if (this.isIdle()) this.handleEnd();\n      this.initialized = false;\n    }\n  }\n\n  isIdle(): boolean {\n    return this.idle;\n  }\n\n  protected testTimeout(): void {\n    if (this.isInitialized()) {\n      const idleTime = this.idler.getIdleTime();\n      if (idleTime >= this.delay) {\n        this.handleBegin();\n      } else {\n        const idleTimeRemaining = this.delay - idleTime;\n        this.timeoutId = setTimeout(\n          () => this.testTimeout(),\n          idleTimeRemaining\n        );\n      }\n    }\n  }\n\n  protected handleBegin(): void {\n    this.idle = true;\n    this.idler.on('interrupted', this.endHandler);\n    this.beginCb();\n    if (Number.isFinite(this.duration) && this.duration >= 0)\n      this.durationTimeoutId = setTimeout(\n        () => this.handleEnd(),\n        this.duration\n      );\n  }\n\n  protected handleEnd(): void {\n    clearTimeout(this.durationTimeoutId);\n    this.idler.off('interrupted', this.endHandler);\n    this.idle = false;\n    this.endCb();\n    this.testTimeout();\n  }\n}\n\nexport { IdleTimeout };\n","import { Callback } from './util';\nimport { IdleTimeout } from './idle-timeout';\n\ninterface Idler {\n  interrupt(): void;\n\n  getIdleTime(): number;\n\n  on(eventType: string, callback: Callback): this;\n\n  off(eventType: string, callback: Callback): this;\n\n  once(eventType: string, callback: Callback): this;\n}\n\nconst dummyIntervalId = setInterval(() => {}, 0);\n\nexport default class IdleInterval extends IdleTimeout {\n  protected intervalCb: Callback;\n\n  protected interval: number;\n\n  protected intervalId: ReturnType<typeof setInterval> = dummyIntervalId;\n\n  constructor(\n    idler: Idler,\n    beginCb: Callback,\n    delay: number,\n    duration: number,\n    intervalCb: Callback,\n    interval: number,\n    endCb: Callback\n  ) {\n    super(idler, beginCb, delay, duration, endCb);\n    this.intervalCb = intervalCb;\n    this.interval = interval;\n  }\n\n  clear(): void {\n    clearInterval(this.intervalId);\n    super.clear();\n  }\n\n  protected handleBegin(): void {\n    super.handleBegin();\n    this.intervalId = setInterval(this.intervalCb, this.interval);\n  }\n\n  protected handleEnd(): void {\n    clearInterval(this.intervalId);\n    super.handleEnd();\n  }\n}\n\nexport { IdleInterval };\n","import { Callback } from './util';\nimport { IdleInterval } from './idle-interval';\n\ninterface Idler {\n  interrupt(): void;\n\n  getIdleTime(): number;\n\n  on(eventType: string, callback: Callback): this;\n\n  off(eventType: string, callback: Callback): this;\n\n  once(eventType: string, callback: Callback): this;\n}\n\nconst dummyAnimationFrameRequestId = requestAnimationFrame(() => {});\n\nexport default class IdleAnimation extends IdleInterval {\n  protected animationCb: FrameRequestCallback;\n\n  protected animationFrameRequestId: ReturnType<typeof requestAnimationFrame> =\n    dummyAnimationFrameRequestId;\n\n  protected animateHandler = this.animate.bind(this);\n\n  constructor(\n    idler: Idler,\n    beginCb: Callback,\n    delay: number,\n    duration: number,\n    animationCb: FrameRequestCallback,\n    intervalCb: Callback,\n    interval: number,\n    endCb: Callback\n  ) {\n    super(idler, beginCb, delay, duration, intervalCb, interval, endCb);\n    this.animationCb = animationCb;\n  }\n\n  clear(): void {\n    cancelAnimationFrame(this.animationFrameRequestId);\n    super.clear();\n  }\n\n  protected handleBegin(): void {\n    super.handleBegin();\n    this.animationFrameRequestId = requestAnimationFrame(this.animateHandler);\n  }\n\n  protected animate(ms: Parameters<FrameRequestCallback>[0]): void {\n    this.animationCb(ms);\n    this.animationFrameRequestId = requestAnimationFrame(this.animateHandler);\n  }\n\n  protected handleEnd(): void {\n    cancelAnimationFrame(this.animationFrameRequestId);\n    super.handleEnd();\n  }\n}\n\nexport { IdleAnimation };\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport { performance } from 'universal-perf-hooks';\nimport { EventEmitter } from 'events';\n\nimport { IdleTimeout } from './idle-timeout';\nimport { IdleInterval } from './idle-interval';\nimport { IdleAnimation } from './idle-animation';\nimport { Interrupter } from './interrupters/interrupter';\nimport { Callback } from './util';\n\nfunction now(): number {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n  return performance.now();\n}\n\ntype CallbackOptions = {\n  delay: number;\n  duration: number;\n  onBegin: Callback;\n  onEnd: Callback;\n  interval: number;\n  onInterval: Callback;\n  onAnimate: FrameRequestCallback;\n};\n\nconst defaultCallbackOptions: CallbackOptions = {\n  delay: 60 * 1000,\n  duration: Number.POSITIVE_INFINITY,\n  onBegin: () => {},\n  onEnd: () => {},\n  interval: Number.POSITIVE_INFINITY,\n  onInterval: () => {},\n  onAnimate: () => {},\n};\n\nexport default class Idler extends EventEmitter {\n  protected lastId: number;\n\n  protected timers: Map<number, IdleTimeout>;\n\n  protected lastEventTimestampMs: number;\n\n  protected readonly interruptHandler: () => void;\n\n  constructor(...interrupters: Interrupter[]) {\n    super();\n    this.lastId = 0;\n    this.timers = new Map<number, IdleTimeout>();\n    this.lastEventTimestampMs = now();\n    this.interruptHandler = this.interrupt.bind(this);\n\n    interrupters.forEach((interrupter) =>\n      this.registerInterrupter(interrupter)\n    );\n  }\n\n  addCallback(options: Partial<CallbackOptions>): number {\n    if (typeof options.onAnimate !== 'undefined') {\n      const {\n        onBegin,\n        delay,\n        duration,\n        onAnimate,\n        onInterval,\n        interval,\n        onEnd,\n      } = {\n        ...defaultCallbackOptions,\n        ...options,\n      };\n      const idleAnimation = new IdleAnimation(\n        this,\n        onBegin,\n        delay,\n        duration,\n        onAnimate,\n        onInterval,\n        interval,\n        onEnd\n      );\n      return this.addIdleTimeout(idleAnimation);\n    }\n    if (\n      typeof options.interval !== 'undefined' &&\n      Number.isFinite(options.interval)\n    ) {\n      const { onBegin, delay, duration, onInterval, interval, onEnd } = {\n        ...defaultCallbackOptions,\n        ...options,\n      };\n      const idleInterval = new IdleInterval(\n        this,\n        onBegin,\n        delay,\n        duration,\n        onInterval,\n        interval,\n        onEnd\n      );\n      return this.addIdleTimeout(idleInterval);\n    }\n    const { onBegin, delay, duration, onEnd } = {\n      ...defaultCallbackOptions,\n      ...options,\n    };\n    const idleTimeout = new IdleTimeout(this, onBegin, delay, duration, onEnd);\n    return this.addIdleTimeout(idleTimeout);\n  }\n\n  protected addIdleTimeout(idleTimeout: IdleTimeout): number {\n    this.lastId += 1;\n    const id = this.lastId;\n    this.timers.set(id, idleTimeout);\n    return id;\n  }\n\n  removeCallback(id: number): void {\n    const timer = this.timers.get(id);\n    if (typeof timer !== 'undefined') timer.clear();\n    this.timers.delete(id);\n  }\n\n  clear(): void {\n    this.timers.forEach((timer) => timer.clear());\n    this.timers.clear();\n  }\n\n  interrupt(): void {\n    this.lastEventTimestampMs = Math.max(now(), this.lastEventTimestampMs);\n    this.emit('interrupted');\n  }\n\n  /**\n   * Return the time in ms since the last interruption of the idle state.\n   * @returns {number}\n   */\n  getIdleTime(): number {\n    return now() - this.lastEventTimestampMs;\n  }\n\n  registerInterrupter(interrupter: Interrupter): this {\n    interrupter.on('interrupted', this.interruptHandler);\n    return this;\n  }\n\n  unregisterInterrupter(interrupter: Interrupter): this {\n    interrupter.off('interrupted', this.interruptHandler);\n    return this;\n  }\n}\n\nexport { Idler, CallbackOptions };\n","import { EventEmitter } from 'events';\nimport { Interrupter } from './interrupter';\n\nexport default class InterrupterBase\n  extends EventEmitter\n  implements Interrupter\n{\n  protected readonly emitInterruptedHandler: () => void;\n\n  constructor() {\n    super();\n    this.emitInterruptedHandler = this.emitInterrupted.bind(this);\n  }\n\n  emitInterrupted(): void {\n    this.emit('interrupted');\n  }\n}\n\nexport { InterrupterBase };\n","import { EventEmitter } from 'events';\n\nexport type EventEmitterOnOff = Pick<EventEmitter, 'on' | 'off'>;\nexport type EventTargetAddRemove = Pick<\n  EventTarget,\n  'addEventListener' | 'removeEventListener'\n>;\nexport type EventEmitterOnOffOrEventTargetAddRemove =\n  | EventEmitterOnOff\n  | EventTargetAddRemove;\n\nexport function hasOnOff(\n  obj: EventEmitterOnOffOrEventTargetAddRemove\n): obj is EventEmitterOnOff {\n  return (\n    typeof (obj as EventEmitterOnOff).on !== 'undefined' &&\n    typeof (obj as EventEmitterOnOff).off !== 'undefined'\n  );\n}\n\nexport function isIterable<X>(i: X | Iterable<X>): i is Iterable<X> {\n  return (\n    i !== null &&\n    typeof i !== 'undefined' &&\n    typeof (i as Iterable<X>)[Symbol.iterator] === 'function'\n  );\n}\n\nexport type Callback = () => void;\n","import { InterrupterBase } from './base';\nimport {\n  EventEmitterOnOffOrEventTargetAddRemove,\n  hasOnOff,\n  isIterable,\n} from '../util';\n\nexport default class EventInterrupter extends InterrupterBase {\n  protected eventEmitters: Set<EventEmitterOnOffOrEventTargetAddRemove>;\n\n  protected eventTypes: Set<string>;\n\n  constructor(\n    eventEmittersOrTargets?:\n      | EventEmitterOnOffOrEventTargetAddRemove\n      | Iterable<EventEmitterOnOffOrEventTargetAddRemove>,\n    eventTypes?: string | Iterable<string>\n  ) {\n    super();\n    this.eventEmitters = new Set<EventEmitterOnOffOrEventTargetAddRemove>();\n    this.eventTypes = new Set<string>();\n    if (typeof eventEmittersOrTargets !== 'undefined') {\n      if (isIterable(eventEmittersOrTargets)) {\n        this.addEventEmitter(...eventEmittersOrTargets);\n      } else {\n        this.addEventEmitter(eventEmittersOrTargets);\n      }\n    }\n    if (typeof eventTypes !== 'undefined') {\n      if (isIterable(eventTypes)) {\n        this.addEventType(...eventTypes);\n      } else {\n        this.addEventType(eventTypes);\n      }\n    }\n  }\n\n  addEventEmitter(\n    ...eventEmittersOrTargets: EventEmitterOnOffOrEventTargetAddRemove[]\n  ): this {\n    eventEmittersOrTargets.forEach((eventEmitterOrTarget) => {\n      if (!this.eventEmitters.has(eventEmitterOrTarget)) {\n        const on = this.wrapOn(eventEmitterOrTarget);\n        this.eventTypes.forEach(on);\n      }\n      this.eventEmitters.add(eventEmitterOrTarget);\n    });\n    return this;\n  }\n\n  removeEventEmitter(\n    ...eventEmittersOrTargets: EventEmitterOnOffOrEventTargetAddRemove[]\n  ): this {\n    eventEmittersOrTargets.forEach((eventEmitterOrTarget) => {\n      if (this.eventEmitters.has(eventEmitterOrTarget)) {\n        const off = this.wrapOff(eventEmitterOrTarget);\n        this.eventTypes.forEach(off);\n      }\n      this.eventEmitters.delete(eventEmitterOrTarget);\n    });\n    return this;\n  }\n\n  hasEventEmitter(\n    eventEmitterOrTarget: EventEmitterOnOffOrEventTargetAddRemove\n  ): boolean {\n    return this.eventEmitters.has(eventEmitterOrTarget);\n  }\n\n  addEventType(...eventTypes: string[]): this {\n    eventTypes.forEach((eventType) => {\n      if (!this.eventTypes.has(eventType))\n        this.eventEmitters.forEach((eventEmitter) =>\n          this.wrapOn(eventEmitter)(eventType)\n        );\n      this.eventTypes.add(eventType);\n    });\n    return this;\n  }\n\n  removeEventType(...eventTypes: string[]): this {\n    eventTypes.forEach((eventType) => {\n      if (this.eventTypes.has(eventType))\n        this.eventEmitters.forEach((eventEmitter) =>\n          this.wrapOff(eventEmitter)(eventType)\n        );\n      this.eventTypes.delete(eventType);\n    });\n    return this;\n  }\n\n  hasEventType(eventType: string): boolean {\n    return this.eventTypes.has(eventType);\n  }\n\n  protected wrapOn(\n    eventEmitterOrTarget: EventEmitterOnOffOrEventTargetAddRemove\n  ): (eventType: string) => void {\n    return hasOnOff(eventEmitterOrTarget)\n      ? (eventType: string) =>\n          eventEmitterOrTarget.on(eventType, this.emitInterruptedHandler)\n      : (eventType: string) =>\n          eventEmitterOrTarget.addEventListener(\n            eventType,\n            this.emitInterruptedHandler\n          );\n  }\n\n  protected wrapOff(\n    eventEmitterOrTarget: EventEmitterOnOffOrEventTargetAddRemove\n  ): (eventType: string) => void {\n    return hasOnOff(eventEmitterOrTarget)\n      ? (eventType: string) =>\n          eventEmitterOrTarget.on(eventType, this.emitInterruptedHandler)\n      : (eventType: string) =>\n          eventEmitterOrTarget.addEventListener(\n            eventType,\n            this.emitInterruptedHandler\n          );\n  }\n}\n\nexport { EventInterrupter };\n","import { EventInterrupter } from './event';\nimport { EventEmitterOnOffOrEventTargetAddRemove } from '../util';\n\nconst keyboardEvents = ['keydown', 'keyup'];\n\nexport default class KeyboardInterrupter extends EventInterrupter {\n  constructor(\n    eventEmittersOrTargets:\n      | EventEmitterOnOffOrEventTargetAddRemove\n      | Iterable<EventEmitterOnOffOrEventTargetAddRemove> = [document]\n  ) {\n    super(eventEmittersOrTargets, keyboardEvents);\n  }\n}\n\nexport { KeyboardInterrupter };\n","import { EventInterrupter } from './event';\nimport { EventEmitterOnOffOrEventTargetAddRemove } from '../util';\n\nconst pointerEvents = ['pointerdown', 'pointermove', 'pointerup'];\nconst mouseAndTouchEvents = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'touchstart',\n  'touchmove',\n  'touchend',\n];\n\nexport default class PointerInterrupter extends EventInterrupter {\n  constructor(\n    eventEmittersOrTargets:\n      | EventEmitterOnOffOrEventTargetAddRemove\n      | Iterable<EventEmitterOnOffOrEventTargetAddRemove> = [document]\n  ) {\n    super(eventEmittersOrTargets, PointerInterrupter.getEventTypes());\n  }\n\n  protected static getEventTypes(): string[] {\n    return typeof window.PointerEvent === 'function'\n      ? pointerEvents\n      : mouseAndTouchEvents;\n  }\n}\n\nexport { PointerInterrupter };\n"],"names":["ReflectOwnKeys","Object","defineProperty","value","exports","window","performance","PerformanceObserver","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","EventEmitter","init","this","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","create","newListener","emit","unshift","push","length","warned","w","Error","String","name","emitter","count","console","warn","onceWrapper","fired","removeListener","wrapFn","arguments","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","eventTargetAgnosticAddListener","flags","on","once","addEventListener","wrapListener","arg","removeEventListener","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","err","message","context","handler","len","listeners","addListener","prependListener","prependOnceListener","off","list","position","originalListener","shift","index","pop","spliceOne","removeAllListeners","key","keys","rawListeners","eventNames","Promise","resolve","reject","errorListener","resolver","slice","addErrorHandlerIfEventEmitter","dummyTimeoutId","setTimeout","IdleTimeout","idler","beginCb","delay","duration","endCb","handleEnd","timeoutId","durationTimeoutId","initialized","idle","_this","testTimeout","isInitialized","clear","clearTimeout","isIdle","idleTime","getIdleTime","handleBegin","_this2","endHandler","isFinite","_this3","dummyIntervalId","setInterval","IdleInterval","intervalCb","interval","clearInterval","intervalId","_IdleTimeout","dummyAnimationFrameRequestId","requestAnimationFrame","IdleAnimation","animationCb","animate","cancelAnimationFrame","animationFrameRequestId","_IdleInterval","animateHandler","ms","now","defaultCallbackOptions","POSITIVE_INFINITY","onBegin","onEnd","onInterval","onAnimate","Idler","lastId","timers","Map","lastEventTimestampMs","interruptHandler","interrupt","forEach","interrupter","registerInterrupter","addCallback","options","idleAnimation","addIdleTimeout","idleInterval","idleTimeout","id","removeCallback","timer","Math","max","unregisterInterrupter","InterrupterBase","emitInterruptedHandler","emitInterrupted","hasOnOff","obj","isIterable","Symbol","iterator","EventInterrupter","eventEmittersOrTargets","eventTypes","eventEmitters","Set","addEventEmitter","addEventType","eventEmitterOrTarget","_this4","has","wrapOn","add","removeEventEmitter","_this5","wrapOff","hasEventEmitter","eventType","_this6","eventEmitter","removeEventType","_this7","hasEventType","_this8","_this9","keyboardEvents","KeyboardInterrupter","document","pointerEvents","mouseAndTouchEvents","PointerInterrupter","getEventTypes","PointerEvent"],"mappings":"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"}